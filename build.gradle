group 'com.imooc.gradle'
version '1.0-SNAPSHOT'

apply plugin: 'java'
// 新增war插件
apply plugin: 'war'

sourceCompatibility = 1.8

configurations.all{
    resolutionStrategy{
        // 强制构建失败
        failOnVersionConflict()
        // 强制指定一个版本解决版本冲突
        force 'org.slf4j:slf4j-api:1.7.24'
    }
}

repositories {
    // 配置多个仓库，按顺序查找，找到为止
    // 本地仓库
    mavenLocal()
    // 中央仓库
    mavenCentral()
}

dependencies {
    // 添加hibernate依赖
    compile ('org.hibernate:hibernate-core:3.6.3.Final'){
//        exclude group:"org.slf4j",module:"slf4j-api"
    }
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//// 创建一个闭包，其功能是创建一个目录
//def createDir={
//    path ->
//        File dir = new File(path)
//        if(!dir.exists()){
//            dir.mkdirs();
//        }
//}
//
//// 创建一个任务
//task makeJavaDir(){
//    def paths = ['src/main/javatest','src/main/resoucetest'];
//    // 动作列表的前面插入一个动作
//    // 下面是动作代码，执行阶段会执行的代码，其他地方都是配置阶段执行代码
//    doFirst {
//        // 遍历目录结构，然后创建对应的目录，参数用到了闭包
//        paths.forEach(createDir);
//    }
//}
//
//// 创建一个建立web目录的任务
//task makeWebDir(){
//    // dependsOn也是配置代码，不能放到执行阶段，否则会执行出错
//    dependsOn 'makeJavaDir'
//    def paths = ['src/main/webapp1','src/test/webapp1'];
//    // 下面是动作代码，也就是执行阶段会执行的代码，其他地方都是在配置阶段执行的代码
//    doLast{
//        paths.forEach(createDir);
//    }
//}
